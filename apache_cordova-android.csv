"Unable to post message to file://. Recipient has origin null, on Cordova WKWebView engine page","I'm trying to load a WKWebView page inside swift application using Cordova. The page contains some javascript code which runs `window.postMessage("some message", self.location.href);` and fails with - `Unable to post message to file://. Recipient has origin null`. I've noticed that `window.origin` returned `null`, while comparing to UIWebview engine in which `window.origin` returned `file://.`CordovaVC.swift:```swiftimport UIKitclass CordovaVC: CDVViewController {    override func viewDidLoad() {        self.wwwFolderName = "./"        self.startPage = "/index.html"        super.viewDidLoad()        // Do any additional setup after loading the view.    }    override func didReceiveMemoryWarning() {        super.didReceiveMemoryWarning()        // Dispose of any resources that can be recreated.    }}```config.xml:```xml<?xml version='1.0' encoding='utf-8'?><widget id="com.example.hello" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0">    <name>HelloWorld</name>    <description>        A sample Apache Cordova application that responds to the deviceready event.    </description>    <feature name="CDVWKWebViewEngine">        <param name="ios-package" value="CDVWKWebViewEngine" />    </feature>    <preference name="CordovaWebViewEngine" value="CDVWKWebViewEngine" />    <feature name="Console">           <param name="ios-package" value="CDVLogger" />           <param name="onload" value="true" />   </feature>    <author email="dev@cordova.apache.org" href="http://cordova.io">        Apache Cordova Team    </author>    <content src="index.html" />    <plugin name="cordova-plugin-whitelist" spec="1" />    <access origin="*" />    <allow-navigation href="*"/>    <allow-intent href="http://*/*" />    <allow-intent href="https://*/*" />    <allow-intent href="tel:*" />    <allow-intent href="sms:*" />    <allow-intent href="mailto:*" />    <allow-intent href="geo:*" />    <platform name="android">        <allow-intent href="market:*" />    </platform>    <platform name="ios">        <allow-intent href="itms:*" />        <allow-intent href="itms-apps:*" />    </platform>    <engine name="ios" spec="^4.5.4" /></widget>```index.html```html<html>    <head>        <meta name="format-detection" content="telephone=no">            <meta name="msapplication-tap-highlight" content="no">                <meta name="page_hybrid">                    <meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width">                        <meta http-equiv="Content-Security-Policy" content="default-src *; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; media-src *; img-src 'self' data:">                        <link rel="stylesheet" type="text/css" href="index.css">                            <title>Hello World</title>                            </head>    <body>        <div class="app">            <h1>Cordova</h1>            <form>                <input type="text" name="txt1" id="txt1">                    <input type="text" name="txt2" value="this is a text" id=txt2>                        <br><br>Gender Blender:                        <br><br><input id="male" type="radio" name="gender" value="male" checked> Male                            <br><br><input id="female" type="radio" name="gender" value="female"> Female                                <br><br><input id="other" type="radio" name="gender" value="other"> Other                                    <br><br>checkbox: <input id="checkbox" type="checkbox" name="vehicle1" value="Bike">I have a bike<br>                                        <br><br>button: <input id="button1" type="button" onclick="alert('Hello World!')" value="Click Me!">                                            <br><br>date: <input id="dateBday" type="date" name="bday">                                                <br><br>email: <input id="email" type="email" name="email">                                                    <br><br>number: <input id="number1" type="number" name="quantity" min="1" max="5">                                                        <br><br>button: <input id="button2" type="button" onclick="window.location = 'test.html';" value="navigate">                                                            <br><br>password: <input id="password1" type="password" name="pwd">                                                                </form>        </div>        <script type="text/javascript" src="cordova.js"></script>        <script type="text/javascript" src="index.js"></script>        <script type="text/javascript" src="slave.js"></script>        <script type="text/javascript" src="jsBridge.js"></script>    </body></html>```Does anyone have an idea about this issue?Thanks in advance.","open","177","undefined","[object Object]","null"
"Use async functions wherever applicable","Using the `async` keyword ensures that a function will **always** return a Promise. Previously this was achieved by wrapping the function body in `return Promise.resolve().then(…)` which has a very slight async penalty and can make stack traces harder to read.### Definition of doneFor all known asynchronous functions:  - add `async` keyword  - undo wrapping in `Promise.resolve().then(…)` if applicable  - undo any explicit result wrapping    `return Promise.resolve(…)` ⮕ `return …`  - throw errors instead of returning rejections    `return Promise.reject(new Error(…))` ⮕ `throw new Error(…)`  - _optional:_ use `await` & `try/catch` in the function body instead of traditional promise handling## Task list### Tools/libs- [ ] cordova-cli- [ ] cordova-lib- [ ] cordova-create- [ ] cordova-fetch- [ ] cordova-common- [ ] cordova-serve- [ ] cordova-js (only the Node.js part)### Platforms (only the Node.js part)- [ ] cordova-android- [ ] cordova-browser- [ ] cordova-ios- [ ] cordova-windows","open","175","undefined","[object Object],[object Object]","null"
"Sustainability of Cordova maintenance","I would like to flag this as a critical issue.We have been adding one maintainer after another but continue to suffer from a lack of resources so badly needed to keep up with bug reports and the rapidly changing mobile platform APIs.I think we need to have some sponsorship of the most important maintenance tasks including:- timely updates to keep up with the mobile platform APIs- bug fixes- documentation- community support- modernization and cleanup of the existing JavaScriptI think the root cause is the loss of backing from a couple major companies.We have discussed some ideas on the mailing list including:- CodeFund.io- [GitHub sponsors](https://github.com/sponsors) (unfortunately it tells me to join a wait list)- Tidelift (I tried https://tidelift.com/lifter/search/npm/cordova-lib but it shows me a "needs subscribers" message)We also discussed Bountysource but it does not seem to be right for project *sustainability*.I think it would be ideal if some of the biggest corporate users would be willing to give something back to help us improve the sustainability.Unfortunately the Apache Foundation "sponsorship" program does not seem prepared to support our needs on updates and bug fixes: http://www.apache.org/foundation/sponsorship.html#FundsGoI do understand and respect that we would likely need to coordinate this kind of an effort with the Apache Foundation.I think this is especially bad in comparison to competitive frameworks such as Capacitor and React Native which do seem to have stronger corporate backing.While the original goal was to "cease to exist", I think lack of sustainability is not the way we want to reach this result.I would also like to vote +1 to pin this issue in first place.","open","163","undefined","","null"
"Installing a plugin with --link does not links the javascript file.","# Bug Report## ProblemWhen developing a plugin, if the plugin is installed using the `--link` flag each change in the source Java File is applied to the plugin on next build (the file is a symlink). The same does not happens with the JavasSript file.### What is expected to happen?Te JavaScript file should also be somehow linked### What does actually happen?An old javascript file lives in `platforms\android\platform_www\plugins\cordova-plugin-some-name\www\SomePlugin.js`## InformationAs work around I use a script that appends de cordova wrapper to my javascript file and copy it.### Command or Code<!-- What command or code is needed to reproduce the problem? -->cordova install some-plugin --link### Environment, Platform, DeviceTested in Windows 10 with 9.0.0 (cordova-lib@9.0.1)### Version information<!-- What are relevant versions you are using?I am using ionic as UI but my builds are done directly using `cordova build`-->## Checklist<!-- Please check the boxes by putting an x in the [ ] like so: [x] -->- [x] I searched for existing GitHub issues- [x] I updated all Cordova tooling to most recent version- [x] I included all the necessary information above","open","161","undefined","","null"
"(improvement) Do not require the www-folder to detect a Cordova-based project.","# Improvement (Bug? Feature Request?)Currently Cordova requires the file `config.xml` and the `www` folder to detect a Cordova-based project. The need of the www-folder is not necessary. It does not matter if it is empty or not. And Cordova will not touch it. (e.g. for installing a native plugin). Cordova is just happy if the www-folder is there.It's annoying if the www-folder is the dist (build) folder and not tracked by git.In this case I have to add a `.gitkeep` file and ignore all other files inside for git.To always keep it. If you try to install a plugin without the www-folder, you'll get the error:```textcordova plugin add cordova-plugin-inappbrowser --verboseCurrent working directory is not a Cordova-based project.```Expected behavior:Only detect the Cordova-based project by the config.xml.Q: Why? The www-folder is the source Folder for Cordova! A: Well, it is used to build the apk. But If you use frameworks like Ionic / Angular you have another source base (src-folder) and build to the www-folder to finally pack it to the apk with Cordova.And the www-folder is not a part of the git-repository.What do you think? Can we do without the www-folder? It's just a dummy in this case.Cordvoa Version `9.0.0`### Workaround**.gitignore**```www/*!www/.gitkeep```Add a **.gitkeep** file to the www-folder.","open","155","undefined","","null"
"Use `.asf.yaml` to configure GitHub settings","Apache Software Foundation just introduced `.asf.yaml`: https://cwiki.apache.org/confluence/display/INFRA/.asf.yaml+features+for+git+repositories It contains a way to configure the description, tags and website of a repository automatically: https://cwiki.apache.org/confluence/display/INFRA/.asf.yaml+features+for+git+repositories#id-.asf.yamlfeaturesforgitrepositories-Githubrepositorymeta-dataThis is awesome, and we should use it for all our repositories.We should probably try with this repo, and then roll out to all repos.","open","149","undefined","[object Object]","null"
"HomeKit is not working with Cordova Plugin in release mode","We are developing Hybrid application using Ionic 1 and Angular JS. For HomeKit integration we develop one Cordova plugin. Cordova plugin worked on debug mode but not working in release mode. We are not getting list of homes. Same code is working in native iOS application.Below are our configuration details: Ionic 2.2.3 Cordova 6.5.0 Node 6.10.2 XCode 10.2.1 iOS 12.3.1 iOS device iPhone 8+Could you please guide us to fix this issue.Thanks in advance","open","145","undefined","","null"
"cannot access iframe content from another domain, XHR empty response text, access origin * and navigation * no longer functions properly","# Bug Reportdisabling websecurity not working properly## Problemcordova does not allow the access to iframe, neither to get an XHRequest response from external websites### What is expected to happen?CORS + site isolation trials to be disabled ### What does actually happen?only a fraction of CORS was disabled xFrameOrigin is working fine, but cannot retreive the iframe content (elements)## Information<!-- Include all relevant information that might help understand and reproduce the problem -->### Command or Code<!-- What command or code is needed to reproduce the problem? -->### Environment, Platform, Device<!-- In what environment, on what platform or on which device are you experiencing the issue? -->Tested on :WindowsAndroid### Version information<!-- What are relevant versions you are using?For example:Cordova: Cordova CLI, Cordova Platforms, Cordova Plugins Other Frameworks: Ionic Framework and CLI versionOperating System, Android Studio, Xcode etc.-->## Checklist<!-- Please check the boxes by putting an x in the [ ] like so: [x] -->- [x] I searched for existing GitHub issues- [x] I updated all Cordova tooling to most recent version- [x] I included all the necessary information above","open","144","undefined","","null"
"Create shareable ESLint config and use it throughout our repos","# Feature Request## Motivation Behind Feature<!-- Why should this feature be implemented? What problem does it solve? -->This would make it easier to enforce consistency in our code style while allowing for controlled refinement of it at the same time.This could also reduce the amount of ESLint related dependencies in the individual repos, if we just require the plugins and base configuration we need in the new shareable config package.## Feature Description<!-- Describe your feature request in detailPlease provide any code examples or screenshots of what this feature would look likeAre there any drawbacks? Will this break anything for existing users? -->- Create a [ESLint shareable config](https://eslint.org/docs/developer-guide/shareable-configs) - Use it in our repos## Implementation Progress### Platforms- [ ] cordova-android- [ ] cordova-browser- [x] cordova-electron (https://github.com/apache/cordova-electron/pull/113)- [ ] cordova-ios- [ ] cordova-osx- [ ] cordova-test-platform- [ ] cordova-windows### Plugins- [ ] cordova-plugin-battery-status- [ ] cordova-plugin-camera- [ ] cordova-plugin-device- [ ] cordova-plugin-dialogs- [ ] cordova-plugin-file- [ ] cordova-plugin-geolocation- [ ] cordova-plugin-inappbrowser- [ ] cordova-plugin-media- [ ] cordova-plugin-media-capture- [ ] cordova-plugin-network-information- [ ] cordova-plugin-screen-orientation- [ ] cordova-plugin-splashscreen- [ ] cordova-plugin-statusbar- [ ] cordova-plugin-vibration- [ ] cordova-plugin-whitelist- [ ] cordova-plugin-wkwebview-engine### Tooling- [ ] cordova-app-hello-world- [x] cordova-cli (https://github.com/apache/cordova-cli/pull/493)- [ ] cordova-coho- [x] cordova-common (https://github.com/apache/cordova-common/pull/105, https://github.com/apache/cordova-common/pull/109)- [x] cordova-create (https://github.com/apache/cordova-create/pull/54, https://github.com/apache/cordova-create/pull/55)- [ ] cordova-docs- [x] cordova-fetch (https://github.com/apache/cordova-fetch/pull/70, https://github.com/apache/cordova-fetch/pull/81)- [x] cordova-js- [x] cordova-lib (https://github.com/apache/cordova-lib/pull/822, https://github.com/apache/cordova-lib/pull/828)- [ ] cordova-mobile-spec- [ ] cordova-node-xcode- [ ] cordova-paramedic- [ ] cordova-plugin-test-framework- [ ] cordova-plugman- [x] cordova-serve (https://github.com/apache/cordova-serve/pull/23, https://github.com/apache/cordova-serve/pull/25)_Excluded: `cordova-status`, `cordova`, and any unused, outdated, or deprecated repos_","open","142","undefined","[object Object]","null"
"[Platforms] Add Paramedic run to tests","`cordova-paramedic` is the test runner for Cordova Plugins. It creates a project, installs the plugin(s) and their test plugins (and the plugin required to run those tests), then runs the app locally and/or on SauceLabs.It itself is tested with a dummy plugin when run via the CI of its repository so changes on Paramedic itself can be verified.Let's add Paramedic to the (CI) tests of the platforms as well. That way we know if a) project creation in the real world still works and b) if the project can be run, and c) depending on if we use the dummy plugin or (all?) core plugins if plugins still function correctly.","open","136","undefined","[object Object],[object Object]","null"
"[Plugins] Code Coverage","Plugins currently have no code coverage metrics at all.Might be a bit more complicated as the tests are run on devices on SauceLabs or on travis.","open","135","undefined","[object Object],[object Object]","null"
"[Plugins] Distribute better .gitattributes file to all repos","Seems a minimal `.gitattributes` might not be such a good idea:```* text eol=lf```This can also cause edits to clearly binary files, otherwise as expected git is not smart enough to know that `.png` for example should keep its line ending.This seems to be a better file:```* text eol=lf### These files are binary and should be left untouched## (binary is a macro for -text -diff)*.png binary*.jpg binary*.jpeg binary*.gif binary*.ico binary*.mov binary*.mp4 binary*.mp3 binary*.flv binary*.fla binary*.swf binary*.gz binary*.zip binary*.7z binary*.ttf binary*.eot binary*.woff binary*.pyc binary*.pdf binary```Some projects even have a list of explicitly text files that should be touched, but I can't imagine that this is also necessary: https://github.com/apache/cordova-ios/blob/master/.gitattributes","open","134","undefined","[object Object]","null"
"[Plugins] Add missing/disabled platforms to CI","After improving the CI test configuration regarding platforms, there are still a bunch that had to be removed as the tests are currently failing. I have PRs adding them back, but obviously those can only be merged after the problems have been fixed:https://github.com/apache/cordova-plugin-camera/pull/469https://github.com/apache/cordova-plugin-file/pull/328https://github.com/apache/cordova-plugin-geolocation/pull/160https://github.com/apache/cordova-plugin-inappbrowser/pull/493https://github.com/apache/cordova-plugin-media/pull/237https://github.com/apache/cordova-plugin-wkwebview-engine/pull/104Each individual problem is linked as an issue in the PR description.","open","133","undefined","[object Object],[object Object]","null"
"[Plugins] Audit .ratignore","Some plugins have a `.ratignore` for the RAT license checker tool from Apache. Those should be audited to make sure we are not ignoring files we should not ignore (or if those files and content can be removed).","open","127","undefined","[object Object]","null"
"What is actually required in `plugin.xml`?","[Documentation of `plugin.xml`](https://cordova.apache.org/docs/en/9.x/plugin_ref/spec.html) unfortunately doesn't define which of the tags are really required, only what attributes of a tag are.But a good part of the non-function information (name, description, version, license, keywords, repo, issue) is duplicated in `package.json`.Can we maybe get rid of some of these in the core plugins for simplified plugin maintenance?(Breaking compatibility with older Cordova CLI / tooling / platform versions would be fine, we can set that via `engines.cordovaDependencies` in `package.json` if needed - but probably not anyway.)","open","124","undefined","[object Object]","null"
"[Plugins] Convert to eslint","Some plugins are still using jshint or no linting at all. Those should be converted to use eslint as most Cordova core plugins already do.To convert:- [ ] https://github.com/apache/cordova-plugin-media/issues/233- [ ] https://github.com/apache/cordova-plugin-splashscreen/issues/219- [ ] https://github.com/apache/cordova-plugin-statusbar/issues/141- [ ] https://github.com/apache/cordova-plugin-screen-orientation/issues/50","open","123","undefined","[object Object],[object Object],[object Object],[object Object]","null"
"Random build failures due to fs-extra defect","# Bug Report## Problem### What is expected to happen?You are able to build your Cordova project reliably.### What does actually happen?Builds randomly fail with the error **Source and destination must not be the same.**## InformationThe random failures are caused by a [defect in fs-extra](https://github.com/jprichardson/node-fs-extra/issues/657), which neglects to respect an inode-related issue in Node itself.### Command or CodeEvery command that copies files with `fs-extra` is affected. `cordova prepare` is most likely to cause this.### Environment, Platform, DeviceWindows 10### Version informationCordova 8.1.2 (cordova-lib@8.1.1)## Checklist<!-- Please check the boxes by putting an x in the [ ] like so: [x] -->- [X] I searched for existing GitHub issues- [X] I updated all Cordova tooling to most recent version- [X] I included all the necessary information above","open","121","undefined","[object Object]","null"
"Run background jobs","# Feature Request## Motivation Behind FeatureCurrently, there is no way to schedule code execution in the background in Cordova apps.Android supports this through [jobs](https://www.vogella.com/tutorials/AndroidTaskScheduling/article.html) and iOS [is going to support this functionality too](https://developer.apple.com/documentation/backgroundtasks) soon.In browsers, one could use service workers (which are not available in Webviews) and in desktops, one could use other native systems ([Windows](https://docs.microsoft.com/en-us/windows/desktop/taskschd/task-scheduler-start-page) and [MacOS](https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/ScheduledJobs.html))## Feature DescriptionThe feature would allow to schedule future execution of JS code, in background, while having access to global variables and plugins, like it was running on the webview, but without access to the DOM.An example of the code could be:```jscordova.backgroundSchedule({  requiresNetwork: true,  requiresExternalPower: false,  when: new Date() // some time in the future  }, function () {  // my code here has access to the plugins})```## Alternatives or WorkaroundsI don't know if this idea would fit better as a new plugin or as a platform-wise feature.Running JS code in iOS outside of the Webview is possible through the [JavaScriptCore](https://developer.apple.com/documentation/javascriptcore), while in Android, there are [a bunch of alternatives](https://medium.com/tech-quizlet/comparison-shopping-searching-for-javascript-engines-for-android-bdc656538f2e).Same applies for Desktop ([Windows](https://stackoverflow.com/questions/5742128/javascript-standalone-compiler-or-interpreter-for-windows) and [MacOS](https://developer.apple.com/documentation/javascriptcore)).Currently, the only way to execute background code is through [this plugin](https://github.com/katzer/cordova-plugin-background-mode), but it comes with limitations (e.g. execution cannot be scheduled).","open","120","undefined","[object Object],[object Object]","null"
"New `CONTRIBUTING.md`","# Feature Request## Motivation Behind FeatureOur current `CONTRIBUTING.md` is outdated and wrong. Example https://github.com/apache/cordova-plugin-file/blob/master/CONTRIBUTING.md + https://github.com/apache/cordova-plugin-file/issues/321## Feature DescriptionA new `CONTRIBUTING.md` should probably be created as a template on https://github.com/apache/cordova-contribute and then be distributed to all our repositories (similar to our GitHub templates: https://github.com/apache/cordova-contribute/blob/master/github-templates.md)We have to discuss a) the content of the file, b) where to put the template and c) how to distribute it to other repositories.## Alternatives or Workaroundsnone","open","115","undefined","[object Object],[object Object],[object Object]","null"
"[Plugins] Add dependency for cordova-plugin-test-framework in /tests","Currently you have to manually also install https://github.com/apache/cordova-plugin-test-framework if you want to run the tests via `cdvtests/index.html` when adding the plugin tests.This could probably be avoided by adding```<dependency id="cordova-plugin-test-framework" />```to each `tests/plugin.xml` (Example: https://github.com/apache/cordova-plugin-camera/blob/master/tests/plugin.xml).","open","114","undefined","[object Object],[object Object]","null"
"[npm] Clean up package content","Currently npm packages contains folders like `.github`, and files like `.appveyor.yml` and `.travis.yml`. Those are probbably not useful in a package context, so should be excluded (if possible).## Implementation Progress### Platforms- [ ] cordova-android- [ ] cordova-browser- [x] cordova-electron (https://github.com/apache/cordova-electron/pull/10)- [ ] cordova-ios- [ ] cordova-osx- [ ] cordova-test-platform- [ ] cordova-windows### Plugins- [ ] cordova-plugin-battery-status- [ ] cordova-plugin-camera- [ ] cordova-plugin-device- [ ] cordova-plugin-dialogs- [ ] cordova-plugin-file- [ ] cordova-plugin-geolocation- [ ] cordova-plugin-inappbrowser- [ ] cordova-plugin-media- [ ] cordova-plugin-media-capture- [ ] cordova-plugin-network-information- [ ] cordova-plugin-screen-orientation- [ ] cordova-plugin-splashscreen- [ ] cordova-plugin-statusbar- [ ] cordova-plugin-vibration- [ ] cordova-plugin-whitelist- [ ] cordova-plugin-wkwebview-engine### Tooling- [ ] cordova-app-hello-world- [ ] cordova-cli- [ ] cordova-coho- [x] cordova-common (https://github.com/apache/cordova-common/pull/104)- [x] cordova-create (https://github.com/apache/cordova-create/pull/50)- [ ] cordova-docs- [x] cordova-fetch (https://github.com/apache/cordova-fetch/pull/74)- [ ] cordova-js- [x] cordova-lib (https://github.com/apache/cordova-lib/pull/809)- [ ] cordova-mobile-spec- [ ] cordova-node-xcode- [ ] cordova-paramedic- [ ] cordova-plugin-test-framework- [ ] cordova-plugman- [ ] cordova-serve_Excluded: `cordova-status`, `cordova`, and any unused, outdated, or deprecated repos_","open","113","undefined","[object Object]","null"
"[npm] Clean up dist-tags","I noticed that the dist-tags of our npm packages sometimes have old stuff that could/should be removed:https://www.npmjs.com/package/cordova-windows```    3.5.0	3.5.0    7.0.0	latest    3.6.3	rc    7.1.0-nightly.2019.5.24.b950b256	nightly```Both `rc` and `3.5.0` should probably be deleted here.","open","112","undefined","","null"
"Migrate Information from config.xml to package.json","# Feature Request## Motivation Behind Feature<!-- Why should this feature be implemented? What problem does it solve? -->Currently, we have been in the process of trying to migrate some information from `config.xml` to `package.json` file. I believe, there's more information that can be moved over. For example, the information in the `author` tag, like author name, email, website URL. Moving this information straight to the `package.json` would allow us to clean up `ConfigParser`.","open","110","undefined","","null"
"[Plugins] Add Table of Contents to README","When cleaning up the README of cordova-plugin-splashscreen I also added a TOC at the beginning: https://github.com/apache/cordova-plugin-splashscreenI think all plugin READMEs would benefit from have a table of contents.","open","107","undefined","[object Object],[object Object]","null"
"CLI: Faster workflow for iterating on plugin configuration and JS","Current one needs to remove and re-add a plugin each time you edit anything on the plugin configuration (package.json, plugin.xml etc) or the JS implementation in `www`. This takes quite a lot of time and is error prone.`--link` should help for the native parts, so we need something similar to that but for the other parts of the plugin.","open","101","undefined","[object Object]","null"
"Loading cordova.js in a web worker and use a bluetooth plugin to process in a different thread","# Loading cordova.js in a web worker and use a bluetooth plugin to process in a different threadHi! I'm trying to connect a bluetooth printer and say "Hello". I'm using **cordova-plugin-bluetooth-serial**.The main problem is because a worker can't manipulate the DOM or windows, so the console show the next error when execute the command **cordova run android --device**:    cordova.js:2184 Uncaught ReferenceError: window is not defined    at cordova.js:2184    at cordova.js:2189    at demo_workers.js:1Is there a way to load cordova.js in a worker and be able to load plugins to work isolated from the main thread?# Code to replicate the situation:## package json:**package.json**     {    "name": "com.test",    "displayName": "test",    "version": "1.0.0",    "description": "A sample Apache Cordova application.",    "main": "index.js",    "scripts": {    "test": "echo \"Error: no test specified\" && exit 1"    },    "author": "Apache Cordova Team",    "license": "Apache-2.0",    "dependencies": {    "cordova-android": "^7.1.4",    "cordova-plugin-bluetooth-serial": "^0.4.7",    "cordova-plugin-whitelist": "^1.3.3"    },    "cordova": {    "plugins": {    "cordova-plugin-whitelist": {},    "cordova-plugin-bluetooth-serial": {}    },    "platforms": ["android"]    }    }## /www files:**index.html**    <!DOCTYPE  html>    <html>    <script  type="text/javascript"  src="setupWorker.js"></script>    <script  type="text/javascript">	    function  print() {		    w.postMessage("Hello");	    }    </script>    <body>	    <button  onclick="print()">print</button>	    <div  id="statusDiv"></div>    </body>    </html>**setupWorker.js**    var  w;    function  startWorker() {	    if (typeof  Worker  !==  "undefined") {		    if (typeof  w  ==  "undefined") {			    w  =  new  Worker("demo_workers.js");		    }	    } else {		    document.getElementById("statusDiv").innerHTML  =		    "Sorry! No Web Worker support.";	    }    }    startWorker();**demo_workers.js**    importScripts("cordova.js");    importScripts("bluetooth.js");          app.initialize();     onmessage  =  function(e) {    	app.onMessage(e.data);    };**bluetooth.js**    var  macAddress  =  "00:00:00:00:00:00";        var  app  = {	    initialize:  function() {		    this.bindEvents();	    },	    bindEvents:  function() {		    self.addEventListener("deviceready", this.onDeviceReady, false);	    },	    onDeviceReady:  function() {		    bluetoothSerial.connect(macAddress, app.onConnect, app.onDisconnect);	    },	    onConnect:  function() {		    console.log("Connected to "  +  macAddress  +  ".");		    bluetoothSerial.subscribe("\n", app.onMessage, app.subscribeFailed);	    },	    onDisconnect:  function() {		    console.log("Disconnected.");	    },	    onMessage:  function(data) {		    bluetoothSerial.write(			    data,			    () => { console.log("write succsess");},			    () => {console.log("write dailure");}		    );	    },	    subscribeFailed:  function() {		    console.log("subscribeFailed...");	    }    };","open","93","undefined","[object Object]","null"
"Add OGX.JS as Framework","# Feature Request## Motivation Behind Feature<!-- Why should this feature be implemented? What problem does it solve? -->New JavaScript framework for Cordova - Please add a link from homepage## Feature Description<!-- Describe your feature request in detailPlease provide any code examples or screenshots of what this feature would look likeAre there any drawbacks? Will this break anything for existing users? -->Please add link from Cordova site homepage to https://github.com/globules-io/OGX.JS/wiki**Logos can be found here:**Color : https://drive.google.com/file/d/1NYWktWlilxIxjvXs65iYGsrLMGkW44di/view?usp=sharingB&W : https://drive.google.com/file/d/1Q4cWBwR0C33_mWzq957k413MN04h4Fpb/view?usp=sharing**Description:**OGX.JS is a JavaScript framework to rapidly create mobile (Android, iOS), desktop (Android ChromeOS) and web applications.","open","92","undefined","[object Object]","null"
"Add Node 12 & Drop Node 6 & 8 Support","# Feature RequestI would like to start discussing and planning for:- Dropping `Node 6` Support- Dropping `Node 8` Support- Adding `Node 12` Support## Motivation Behind FeatureThe Node team currently has documented: - Node 6's End of Life: 2019-04-30- Node 8's End of Life: Targeted date December 2019- Node 12's Initial Release: Targeted date April 23rd 2019You can read more about Node's release schedule [here](https://github.com/nodejs/Release).## Feature Description- [x] Public Announcement via Blog Post### **May 2019?**- [x] Update AppVeyor/Travis CI to test with Node.js 6.x, 8.x, 10.x, and 12.x.- [x] Update requirement check and notify users of Node.js 6.x deprecation. https://github.com/apache/cordova-cli/pull/454### **Fall 2019**- [x] Update requirement check and notify users of Node.js 8.x deprecation. https://github.com/apache/cordova-cli/pull/458### **Winter 2019**- [ ] Removed Node.js 6.x support.- [ ] Removed Node.js 8.x support.- [ ] Added Node.js 12.x  support.- [ ] Platforms, tools, and core libraries to bump up a major version.- [ ] Update AppVeyor/Travis CI to test only Node.js 10.x, and 12.x.## Alternatives or Workarounds- Undefined","open","79","undefined","[object Object]","null"
"Feedback about the new GitHub issue and PR templates","As the new GitHub issue and PR templates are rolled out, I think it makes sense to start collecting feedbacks and things we notive about them ourselves to be able to iterate and improve them.","open","78","undefined","[object Object]","null"
"Unsuccessful cordova platform/plugin commands","I looked a bit at the Cordova Telemetry data about the commands executed:[datastudio.google.com/reporting/0B-Ja5cNOX_XLTElHdWd4V2NUem8/page/zkJF](https://datastudio.google.com/reporting/0B-Ja5cNOX_XLTElHdWd4V2NUem8/page/zkJF)After creating #75 and #74 the only big "class" of `unsuccessful` commands left were related to `platform` and `plugin`:![image](https://user-images.githubusercontent.com/183673/52914620-0c711c00-32cb-11e9-8407-95de03b83f08.png)![image](https://user-images.githubusercontent.com/183673/52914636-27439080-32cb-11e9-8765-6ff8c4af0f79.png)Lots of unsuccessful there as well. Going through the list you also notice that there are some that are not actually valid commands (`cordova platform android`) which still are counted as successful as they are mapped to another (not really wanted) command internally.Looking at _all_ unsuccessfull command executions, the platform/build related ones account for 38% commands.Why are so many `add` and `remove` failing? Typos of the users?","open","76","undefined","[object Object]","null"
